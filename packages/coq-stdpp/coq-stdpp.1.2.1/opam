opam-version: "2.0"
name: "coq-stdpp"
maintainer: "Ralf Jung <jung@mpi-sws.org>"
homepage: "https://gitlab.mpi-sws.org/iris/stdpp"
authors: "Robbert Krebbers, Jacques-Henri Jourdan, Ralf Jung"
bug-reports: "https://gitlab.mpi-sws.org/iris/stdpp/issues"
license: "BSD"
dev-repo: "git+https://gitlab.mpi-sws.org/iris/stdpp.git"
tags: [ "date:2019-08-29" ]
synopsis: "std++ is an extended \"Standard Library\" for Coq"
description: """
The key features of this library are as follows:

- It provides a great number of definitions and lemmas for common data
  structures such as lists, finite maps, finite sets, and finite multisets.
- It uses type classes for common notations (like `∅`, `∪`, and Haskell-style
  monad notations) so that these can be overloaded for different data structures.
- It uses type classes to keep track of common properties of types, like it
  having decidable equality or being countable or finite.
- Most data structures are represented in canonical ways so that Leibniz
  equality can be used as much as possible (for example, for maps we have
  `m1 = m2` iff `∀ i, m1 !! i = m2 !! i`). On top of that, the library provides
  setoid instances for most types and operations.
- It provides various tactics for common tasks, like an ssreflect inspired
  `done` tactic for finishing trivial goals, a simple breadth-first solver
  `naive_solver`, an equality simplifier `simplify_eq`, a solver `solve_proper`
  for proving compatibility of functions with respect to relations, and a solver
  `set_solver` for goals involving set operations.
- It is entirely dependency- and axiom-free."""

depends: [
  "coq" {(>= "8.7.2" & < "8.11~") | (= "dev")}
]
build: [make "-j%{jobs}%"]
install: [make "install"]

url {
  src:
    "https://gitlab.mpi-sws.org/iris/stdpp/repository/coq-stdpp-1.2.1/archive.tar.gz"
  checksum:
    "sha512=8eb04e9a70a9be0b7a9565516d03952ec9c54cb7abe20ddea4d27ceb3c18022fdf2f1409df6988092741a0e5e9086f852dc2eb3e7bdc4f4eff91b2baa72c16af"
}
